# HTTP server for domain (also serves content until HTTPS is available)
server {
    listen 80;
    server_name ${BASE_DOMAIN} www.${BASE_DOMAIN};
    
    # Let's Encrypt challenge location
    location /.well-known/acme-challenge/ {
        root /var/www/certbot;
    }
    
    root /usr/share/nginx/html;
    index index.html;

    # Cache static assets
    location ~* \.(js|css|png|jpg|jpeg|gif|ico|svg|woff|woff2|ttf|eot)$ {
        expires 1y;
        add_header Cache-Control "public, immutable";
    }

    # Serve ads.txt file directly
    location = /ads.txt {
        add_header Content-Type text/plain;
    }

    # Handle Angular routing
    location / {
        try_files $uri $uri/ /index.html;
    }

    # Health check endpoint
    location /health {
        access_log off;
        return 200 "healthy\n";
        add_header Content-Type text/plain;
    }

    # Security: Deny access to sensitive files (but allow .well-known)
    location ~ /\.(?!well-known) {
        deny all;
    }
    
    # Security: Deny access to environment files
    location ~ \.(env|ini|conf|config|yml|yaml|json)$ {
        deny all;
    }
    
    # Security: Deny access to backup and temporary files
    location ~ ~$ {
        deny all;
    }
    
    # Security: Deny access to system files
    location ~ /(\.htaccess|\.htpasswd|\.DS_Store|Thumbs\.db)$ {
        deny all;
    }
    
    # Security: Deny access to source code and build files
    location ~ \.(ts|js\.map|css\.map|scss|sass|less)$ {
        deny all;
    }
    
    # Security: Deny access to package files
    location ~ /(package\.json|package-lock\.json|yarn\.lock|composer\.json)$ {
        deny all;
    }
}

# HTTP server for IP address (no redirect for IP)
server {
    listen 80;
    server_name ${PUBLIC_IP};
    
    # Let's Encrypt challenge location
    location /.well-known/acme-challenge/ {
        root /var/www/certbot;
    }
    
    root /usr/share/nginx/html;
    index index.html;

    # Cache static assets
    location ~* \.(js|css|png|jpg|jpeg|gif|ico|svg|woff|woff2|ttf|eot)$ {
        expires 1y;
        add_header Cache-Control "public, immutable";
    }

    # Serve ads.txt file directly
    location = /ads.txt {
        add_header Content-Type text/plain;
    }

    # Handle Angular routing
    location / {
        try_files $uri $uri/ /index.html;
    }

    # Health check endpoint
    location /health {
        access_log off;
        return 200 "healthy\n";
        add_header Content-Type text/plain;
    }

    # Security: Deny access to sensitive files (but allow .well-known)
    location ~ /\.(?!well-known) {
        deny all;
    }
    
    # Security: Deny access to environment files
    location ~ \.(env|ini|conf|config|yml|yaml|json)$ {
        deny all;
    }
    
    # Security: Deny access to backup and temporary files
    location ~ ~$ {
        deny all;
    }
    
    # Security: Deny access to system files
    location ~ /(\.htaccess|\.htpasswd|\.DS_Store|Thumbs\.db)$ {
        deny all;
    }
    
    # Security: Deny access to source code and build files
    location ~ \.(ts|js\.map|css\.map|scss|sass|less)$ {
        deny all;
    }
    
    # Security: Deny access to package files
    location ~ /(package\.json|package-lock\.json|yarn\.lock|composer\.json)$ {
        deny all;
    }
}

# RSS cache configuration - aggressive caching for instant loading
proxy_cache_path /var/cache/nginx/rss levels=1:2 keys_zone=rss_cache:10m max_size=100m inactive=2h use_temp_path=off;

# HTTPS server for domain (will be dynamically added by enable-https.sh after certificates are obtained)
# This section is commented out to prevent nginx from crashing when certificates don't exist yet
# The enable-https.sh script will add the HTTPS configuration after Let's Encrypt certificates are obtained

# server {
#     listen 443 ssl http2;
#     server_name ${BASE_DOMAIN} www.${BASE_DOMAIN};
#     
#     # SSL configuration
#     ssl_certificate /etc/letsencrypt/live/${BASE_DOMAIN}/fullchain.pem;
#     ssl_certificate_key /etc/letsencrypt/live/${BASE_DOMAIN}/privkey.pem;
#     
#     # SSL security settings
#     ssl_protocols TLSv1.2 TLSv1.3;
#     ssl_ciphers ECDHE-RSA-AES128-GCM-SHA256:ECDHE-RSA-AES256-GCM-SHA384:ECDHE-RSA-AES128-SHA256:ECDHE-RSA-AES256-SHA384;
#     ssl_prefer_server_ciphers off;
#     ssl_session_cache shared:SSL:10m;
#     ssl_session_timeout 10m;
#     
#     # Security headers
#     add_header Strict-Transport-Security "max-age=31536000; includeSubDomains" always;
#     add_header X-Frame-Options DENY always;
#     add_header X-Content-Type-Options nosniff always;
#     add_header X-XSS-Protection "1; mode=block" always;
#     add_header Referrer-Policy "strict-origin-when-cross-origin" always;
#     
#     root /usr/share/nginx/html;
#     index index.html;
#     
#     # DNS resolver for proxy
#     resolver 8.8.8.8 8.8.4.4 valid=300s;
#     resolver_timeout 5s;
# 
#     # Cache static assets
#     location ~* \.(js|css|png|jpg|jpeg|gif|ico|svg|woff|woff2|ttf|eot)$ {
#         expires 1y;
#         add_header Cache-Control "public, immutable";
#     }
# 
#     # Serve ads.txt file directly
#     location = /ads.txt {
#         add_header Content-Type text/plain;
#     }
# 
#     # Handle Angular routing
#     location / {
#         try_files $uri $uri/ /index.html;
#     }
#     
#     # RSS proxy endpoints with caching
#     location /api/rss/espn {
#         proxy_pass https://www.espn.com/espn/rss/nfl/news?null;
#         proxy_ssl_verify off;
#         proxy_ssl_server_name on;
#         proxy_set_header Host www.espn.com;
#         proxy_set_header User-Agent "Mozilla/5.0 (Windows NT 10.0; Win64; x64) AppleWebKit/537.36";
#         proxy_set_header X-Forwarded-For $proxy_add_x_forwarded_for;
#         proxy_set_header X-Forwarded-Proto $scheme;
#         proxy_connect_timeout 5s;
#         proxy_read_timeout 10s;
#         proxy_intercept_errors on;
#         error_page 502 503 504 = @rss_fallback;
#         
#         # Cache settings - aggressive caching for instant response
#         proxy_cache rss_cache;
#         proxy_cache_valid 200 1h;
#         proxy_cache_valid 404 502 503 504 5m;
#         proxy_cache_use_stale error timeout updating http_500 http_502 http_503 http_504;
#         proxy_cache_background_update on;
#         proxy_cache_lock on;
#         proxy_cache_revalidate on;
#         add_header X-Cache-Status $upstream_cache_status;
#     }
#     location /api/rss/coldwire {
#         proxy_pass https://www.thecoldwire.com/sports/nfl/feed/;
#         proxy_ssl_verify off;
#         proxy_ssl_server_name on;
#         proxy_set_header Host www.thecoldwire.com;
#         proxy_set_header User-Agent "Mozilla/5.0 (Windows NT 10.0; Win64; x64) AppleWebKit/537.36";
#         proxy_set_header X-Forwarded-For $proxy_add_x_forwarded_for;
#         proxy_set_header X-Forwarded-Proto $scheme;
#         proxy_connect_timeout 5s;
#         proxy_read_timeout 10s;
#         proxy_intercept_errors on;
#         error_page 502 503 504 = @rss_fallback;
#         
#         # Cache settings - aggressive caching for instant response
#         proxy_cache rss_cache;
#         proxy_cache_valid 200 1h;
#         proxy_cache_valid 404 502 503 504 5m;
#         proxy_cache_use_stale error timeout updating http_500 http_502 http_503 http_504;
#         proxy_cache_background_update on;
#         proxy_cache_lock on;
#         proxy_cache_revalidate on;
#         add_header X-Cache-Status $upstream_cache_status;
#     }
#     location /api/rss/nyt {
#         proxy_pass https://www.nytimes.com/svc/collections/v1/publish/http://www.nytimes.com/topic/organization/national-football-league/rss.xml;
#         proxy_ssl_verify off;
#         proxy_ssl_server_name on;
#         proxy_set_header Host www.nytimes.com;
#         proxy_set_header User-Agent "Mozilla/5.0 (Windows NT 10.0; Win64; x64) AppleWebKit/537.36";
#         proxy_set_header X-Forwarded-For $proxy_add_x_forwarded_for;
#         proxy_set_header X-Forwarded-Proto $scheme;
#         proxy_connect_timeout 5s;
#         proxy_read_timeout 10s;
#         proxy_intercept_errors on;
#         error_page 502 503 504 = @rss_fallback;
#         
#         # Cache settings - aggressive caching for instant response
#         proxy_cache rss_cache;
#         proxy_cache_valid 200 1h;
#         proxy_cache_valid 404 502 503 504 5m;
#         proxy_cache_use_stale error timeout updating http_500 http_502 http_503 http_504;
#         proxy_cache_background_update on;
#         proxy_cache_lock on;
#         proxy_cache_revalidate on;
#         add_header X-Cache-Status $upstream_cache_status;
#     }
#     location /api/rss/wapo {
#         proxy_pass https://feeds.washingtonpost.com/rss/rss_football-insider;
#         proxy_ssl_verify off;
#         proxy_ssl_server_name on;
#         proxy_set_header Host feeds.washingtonpost.com;
#         proxy_set_header User-Agent "Mozilla/5.0 (Windows NT 10.0; Win64; x64) AppleWebKit/537.36";
#         proxy_set_header X-Forwarded-For $proxy_add_x_forwarded_for;
#         proxy_set_header X-Forwarded-Proto $scheme;
#         proxy_connect_timeout 5s;
#         proxy_read_timeout 10s;
#         proxy_intercept_errors on;
#         error_page 502 503 504 = @rss_fallback;
#         
#         # Cache settings - aggressive caching for instant response
#         proxy_cache rss_cache;
#         proxy_cache_valid 200 1h;
#         proxy_cache_valid 404 502 503 504 5m;
#         proxy_cache_use_stale error timeout updating http_500 http_502 http_503 http_504;
#         proxy_cache_background_update on;
#         proxy_cache_lock on;
#         proxy_cache_revalidate on;
#         add_header X-Cache-Status $upstream_cache_status;
#     }
#     
#     location @rss_fallback {
#         return 200 '<?xml version="1.0" encoding="UTF-8"?><rss version="2.0"><channel><title>NFL News</title><description>Temporarily unavailable</description></channel></rss>';
#         add_header Content-Type application/xml;
#     }
# 
#     # Health check endpoint
#     location /health {
#         access_log off;
#         return 200 "healthy\n";
#         add_header Content-Type text/plain;
#     }
# 
#     # Security: Deny access to sensitive files
#     location ~ /\. {
#         deny all;
#     }
#     
#     # Security: Deny access to environment files
#     location ~ \.(env|ini|conf|config|yml|yaml|json)$ {
#         deny all;
#     }
#     
#     # Security: Deny access to backup and temporary files
#     location ~ ~$ {
#         deny all;
#     }
#     
#     # Security: Deny access to system files
#     location ~ /(\.htaccess|\.htpasswd|\.DS_Store|Thumbs\.db)$ {
#         deny all;
#     }
#     
#     # Security: Deny access to source code and build files
#     location ~ \.(ts|js\.map|css\.map|scss|sass|less)$ {
#         deny all;
#     }
#     
#     # Security: Deny access to package files
#     location ~ /(package\.json|package-lock\.json|yarn\.lock|composer\.json)$ {
#         deny all;
#     }
# }

# Fallback server for development (localhost)
server {
    listen 80;
    server_name localhost;
    root /usr/share/nginx/html;
    index index.html;
    
    # DNS resolver for proxy
    resolver 8.8.8.8 8.8.4.4 valid=300s;
    resolver_timeout 5s;

    # Cache static assets
    location ~* \.(js|css|png|jpg|jpeg|gif|ico|svg|woff|woff2|ttf|eot)$ {
        expires 1y;
        add_header Cache-Control "public, immutable";
    }

    # Serve ads.txt file directly
    location = /ads.txt {
        add_header Content-Type text/plain;
    }

    # Handle Angular routing
    location / {
        try_files $uri $uri/ /index.html;
    }
    
    # RSS proxy endpoints (dev fallback)
    location /api/rss/espn {
        proxy_pass https://www.espn.com/espn/rss/nfl/news?null;
        proxy_ssl_verify off;
        proxy_ssl_server_name on;
        proxy_set_header Host www.espn.com;
        proxy_set_header User-Agent "Mozilla/5.0 (Windows NT 10.0; Win64; x64) AppleWebKit/537.36";
        proxy_set_header X-Forwarded-For $proxy_add_x_forwarded_for;
        proxy_set_header X-Forwarded-Proto $scheme;
        proxy_connect_timeout 5s;
        proxy_read_timeout 10s;
    }
    location /api/rss/coldwire {
        proxy_pass https://www.thecoldwire.com/sports/nfl/feed/;
        proxy_ssl_verify off;
        proxy_ssl_server_name on;
        proxy_set_header Host www.thecoldwire.com;
        proxy_set_header User-Agent "Mozilla/5.0 (Windows NT 10.0; Win64; x64) AppleWebKit/537.36";
        proxy_set_header X-Forwarded-For $proxy_add_x_forwarded_for;
        proxy_set_header X-Forwarded-Proto $scheme;
        proxy_connect_timeout 5s;
        proxy_read_timeout 10s;
    }
    location /api/rss/nyt {
        proxy_pass https://www.nytimes.com/svc/collections/v1/publish/http://www.nytimes.com/topic/organization/national-football-league/rss.xml;
        proxy_ssl_verify off;
        proxy_ssl_server_name on;
        proxy_set_header Host www.nytimes.com;
        proxy_set_header User-Agent "Mozilla/5.0 (Windows NT 10.0; Win64; x64) AppleWebKit/537.36";
        proxy_set_header X-Forwarded-For $proxy_add_x_forwarded_for;
        proxy_set_header X-Forwarded-Proto $scheme;
        proxy_connect_timeout 5s;
        proxy_read_timeout 10s;
    }
    location /api/rss/wapo {
        proxy_pass https://feeds.washingtonpost.com/rss/rss_football-insider;
        proxy_ssl_verify off;
        proxy_ssl_server_name on;
        proxy_set_header Host feeds.washingtonpost.com;
        proxy_set_header User-Agent "Mozilla/5.0 (Windows NT 10.0; Win64; x64) AppleWebKit/537.36";
        proxy_set_header X-Forwarded-For $proxy_add_x_forwarded_for;
        proxy_set_header X-Forwarded-Proto $scheme;
        proxy_connect_timeout 5s;
        proxy_read_timeout 10s;
    }

    # Health check endpoint
    location /health {
        access_log off;
        return 200 "healthy\n";
        add_header Content-Type text/plain;
    }

    # Security: Deny access to sensitive files (but allow .well-known)
    location ~ /\.(?!well-known) {
        deny all;
    }
    
    # Security: Deny access to environment files
    location ~ \.(env|ini|conf|config|yml|yaml|json)$ {
        deny all;
    }
    
    # Security: Deny access to backup and temporary files
    location ~ ~$ {
        deny all;
    }
    
    # Security: Deny access to system files
    location ~ /(\.htaccess|\.htpasswd|\.DS_Store|Thumbs\.db)$ {
        deny all;
    }
    
    # Security: Deny access to source code and build files
    location ~ \.(ts|js\.map|css\.map|scss|sass|less)$ {
        deny all;
    }
    
    # Security: Deny access to package files
    location ~ /(package\.json|package-lock\.json|yarn\.lock|composer\.json)$ {
        deny all;
    }
}